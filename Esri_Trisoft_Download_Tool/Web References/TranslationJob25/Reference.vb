'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace TranslationJob25
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TranslationJob25Soap", [Namespace]:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5")>  _
    Partial Public Class TranslationJob25
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetPossibleTargetStatusesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranslationJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveMetaDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveTranslationJobItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveExternalTranslationJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateTranslationJobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTranslationJob3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetMetaData3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateTranslationJobItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTranslationJobItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteTranslationJobItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateExternalTranslationJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteExternalTranslationJobsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Esri_Trisoft_Download_Tool.My.MySettings.Default.Esri_Trisoft_Download_Tool_TranslationJob25_TranslationJob25
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetPossibleTargetStatusesCompleted As GetPossibleTargetStatusesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMetaDataCompleted As GetMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranslationJobCompleted As GetTranslationJobCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveMetaDataCompleted As RetrieveMetaDataCompletedEventHandler
        
        '''<remarks/>
        Public Event FindCompleted As FindCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveTranslationJobItemsCompleted As RetrieveTranslationJobItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveExternalTranslationJobsCompleted As RetrieveExternalTranslationJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateTranslationJobCompleted As CreateTranslationJobCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTranslationJob3Completed As UpdateTranslationJob3CompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteCompleted As DeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event SetMetaData3Completed As SetMetaData3CompletedEventHandler
        
        '''<remarks/>
        Public Event CreateTranslationJobItemsCompleted As CreateTranslationJobItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTranslationJobItemsCompleted As UpdateTranslationJobItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteTranslationJobItemsCompleted As DeleteTranslationJobItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateExternalTranslationJobsCompleted As CreateExternalTranslationJobsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteExternalTranslationJobsCompleted As DeleteExternalTranslationJobsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/GetPossibleTargetStatuses"& _ 
            "", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPossibleTargetStatuses(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByRef psOutXMLLovValueList As String) As String
            Dim results() As Object = Me.Invoke("GetPossibleTargetStatuses", New Object() {psAuthContext, psTranslationJobId})
            psAuthContext = CType(results(1),String)
            psOutXMLLovValueList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPossibleTargetStatusesAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String)
            Me.GetPossibleTargetStatusesAsync(psAuthContext, psTranslationJobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPossibleTargetStatusesAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal userState As Object)
            If (Me.GetPossibleTargetStatusesOperationCompleted Is Nothing) Then
                Me.GetPossibleTargetStatusesOperationCompleted = AddressOf Me.OnGetPossibleTargetStatusesOperationCompleted
            End If
            Me.InvokeAsync("GetPossibleTargetStatuses", New Object() {psAuthContext, psTranslationJobId}, Me.GetPossibleTargetStatusesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPossibleTargetStatusesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPossibleTargetStatusesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPossibleTargetStatusesCompleted(Me, New GetPossibleTargetStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/GetMetaData", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMetaData(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedMetaData As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("GetMetaData", New Object() {psAuthContext, psTranslationJobId, psXMLRequestedMetaData, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String)
            Me.GetMetaDataAsync(psAuthContext, psTranslationJobId, psXMLRequestedMetaData, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMetaDataAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.GetMetaDataOperationCompleted Is Nothing) Then
                Me.GetMetaDataOperationCompleted = AddressOf Me.OnGetMetaDataOperationCompleted
            End If
            Me.InvokeAsync("GetMetaData", New Object() {psAuthContext, psTranslationJobId, psXMLRequestedMetaData, psOutXMLObjList}, Me.GetMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMetaDataCompleted(Me, New GetMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/GetTranslationJob", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranslationJob(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedMetaData As String, ByRef psOutXMLObjList As String, ByRef psOutXMLTranslationJobContainerList As String, ByRef psOutXMLTranslationJobWorkflowList As String) As String
            Dim results() As Object = Me.Invoke("GetTranslationJob", New Object() {psAuthContext, psTranslationJobId, psXMLRequestedMetaData, psOutXMLObjList, psOutXMLTranslationJobContainerList, psOutXMLTranslationJobWorkflowList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            psOutXMLTranslationJobContainerList = CType(results(3),String)
            psOutXMLTranslationJobWorkflowList = CType(results(4),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranslationJobAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal psOutXMLTranslationJobContainerList As String, ByVal psOutXMLTranslationJobWorkflowList As String)
            Me.GetTranslationJobAsync(psAuthContext, psTranslationJobId, psXMLRequestedMetaData, psOutXMLObjList, psOutXMLTranslationJobContainerList, psOutXMLTranslationJobWorkflowList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranslationJobAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal psOutXMLTranslationJobContainerList As String, ByVal psOutXMLTranslationJobWorkflowList As String, ByVal userState As Object)
            If (Me.GetTranslationJobOperationCompleted Is Nothing) Then
                Me.GetTranslationJobOperationCompleted = AddressOf Me.OnGetTranslationJobOperationCompleted
            End If
            Me.InvokeAsync("GetTranslationJob", New Object() {psAuthContext, psTranslationJobId, psXMLRequestedMetaData, psOutXMLObjList, psOutXMLTranslationJobContainerList, psOutXMLTranslationJobWorkflowList}, Me.GetTranslationJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranslationJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranslationJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranslationJobCompleted(Me, New GetTranslationJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/RetrieveMetaData", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveMetaData(ByRef psAuthContext As String, ByVal pasTranslationJobIds() As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetaData As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveMetaData", New Object() {psAuthContext, pasTranslationJobIds, psXMLMetadataFilter, psXMLRequestedMetaData, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetaDataAsync(ByVal psAuthContext As String, ByVal pasTranslationJobIds() As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String)
            Me.RetrieveMetaDataAsync(psAuthContext, pasTranslationJobIds, psXMLMetadataFilter, psXMLRequestedMetaData, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveMetaDataAsync(ByVal psAuthContext As String, ByVal pasTranslationJobIds() As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.RetrieveMetaDataOperationCompleted Is Nothing) Then
                Me.RetrieveMetaDataOperationCompleted = AddressOf Me.OnRetrieveMetaDataOperationCompleted
            End If
            Me.InvokeAsync("RetrieveMetaData", New Object() {psAuthContext, pasTranslationJobIds, psXMLMetadataFilter, psXMLRequestedMetaData, psOutXMLObjList}, Me.RetrieveMetaDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveMetaDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveMetaDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveMetaDataCompleted(Me, New RetrieveMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/Find", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Find(ByRef psAuthContext As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetaData As String, ByRef psOutXMLObjList As String) As String
            Dim results() As Object = Me.Invoke("Find", New Object() {psAuthContext, psXMLMetadataFilter, psXMLRequestedMetaData, psOutXMLObjList})
            psAuthContext = CType(results(1),String)
            psOutXMLObjList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal psAuthContext As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String)
            Me.FindAsync(psAuthContext, psXMLMetadataFilter, psXMLRequestedMetaData, psOutXMLObjList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindAsync(ByVal psAuthContext As String, ByVal psXMLMetadataFilter As String, ByVal psXMLRequestedMetaData As String, ByVal psOutXMLObjList As String, ByVal userState As Object)
            If (Me.FindOperationCompleted Is Nothing) Then
                Me.FindOperationCompleted = AddressOf Me.OnFindOperationCompleted
            End If
            Me.InvokeAsync("Find", New Object() {psAuthContext, psXMLMetadataFilter, psXMLRequestedMetaData, psOutXMLObjList}, Me.FindOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindCompleted(Me, New FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/RetrieveTranslationJobIte"& _ 
            "ms", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveTranslationJobItems(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedTranslationJobItemData As String, ByRef psOutXMLTranslationJobItemList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequestedTranslationJobItemData, psOutXMLTranslationJobItemList})
            psAuthContext = CType(results(1),String)
            psOutXMLTranslationJobItemList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedTranslationJobItemData As String, ByVal psOutXMLTranslationJobItemList As String)
            Me.RetrieveTranslationJobItemsAsync(psAuthContext, psTranslationJobId, psXMLRequestedTranslationJobItemData, psOutXMLTranslationJobItemList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequestedTranslationJobItemData As String, ByVal psOutXMLTranslationJobItemList As String, ByVal userState As Object)
            If (Me.RetrieveTranslationJobItemsOperationCompleted Is Nothing) Then
                Me.RetrieveTranslationJobItemsOperationCompleted = AddressOf Me.OnRetrieveTranslationJobItemsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequestedTranslationJobItemData, psOutXMLTranslationJobItemList}, Me.RetrieveTranslationJobItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveTranslationJobItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveTranslationJobItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveTranslationJobItemsCompleted(Me, New RetrieveTranslationJobItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/RetrieveExternalTranslati"& _ 
            "onJobs", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveExternalTranslationJobs(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByRef psOutXMLExternalTranslationJobList As String) As String
            Dim results() As Object = Me.Invoke("RetrieveExternalTranslationJobs", New Object() {psAuthContext, psTranslationJobId, psOutXMLExternalTranslationJobList})
            psAuthContext = CType(results(1),String)
            psOutXMLExternalTranslationJobList = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveExternalTranslationJobsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psOutXMLExternalTranslationJobList As String)
            Me.RetrieveExternalTranslationJobsAsync(psAuthContext, psTranslationJobId, psOutXMLExternalTranslationJobList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveExternalTranslationJobsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psOutXMLExternalTranslationJobList As String, ByVal userState As Object)
            If (Me.RetrieveExternalTranslationJobsOperationCompleted Is Nothing) Then
                Me.RetrieveExternalTranslationJobsOperationCompleted = AddressOf Me.OnRetrieveExternalTranslationJobsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveExternalTranslationJobs", New Object() {psAuthContext, psTranslationJobId, psOutXMLExternalTranslationJobList}, Me.RetrieveExternalTranslationJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveExternalTranslationJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveExternalTranslationJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveExternalTranslationJobsCompleted(Me, New RetrieveExternalTranslationJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/CreateTranslationJob", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateTranslationJob(ByRef psAuthContext As String, ByVal pasWriteAccess() As String, ByVal pasReadAccess() As String, ByVal psXMLMetaData As String, ByVal psXMLTranslationJobContainerList As String, ByVal psXMLTranslationJobWorkflowList As String, ByRef psOutTranslationJobId As String) As String
            Dim results() As Object = Me.Invoke("CreateTranslationJob", New Object() {psAuthContext, pasWriteAccess, pasReadAccess, psXMLMetaData, psXMLTranslationJobContainerList, psXMLTranslationJobWorkflowList, psOutTranslationJobId})
            psAuthContext = CType(results(1),String)
            psOutTranslationJobId = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateTranslationJobAsync(ByVal psAuthContext As String, ByVal pasWriteAccess() As String, ByVal pasReadAccess() As String, ByVal psXMLMetaData As String, ByVal psXMLTranslationJobContainerList As String, ByVal psXMLTranslationJobWorkflowList As String, ByVal psOutTranslationJobId As String)
            Me.CreateTranslationJobAsync(psAuthContext, pasWriteAccess, pasReadAccess, psXMLMetaData, psXMLTranslationJobContainerList, psXMLTranslationJobWorkflowList, psOutTranslationJobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateTranslationJobAsync(ByVal psAuthContext As String, ByVal pasWriteAccess() As String, ByVal pasReadAccess() As String, ByVal psXMLMetaData As String, ByVal psXMLTranslationJobContainerList As String, ByVal psXMLTranslationJobWorkflowList As String, ByVal psOutTranslationJobId As String, ByVal userState As Object)
            If (Me.CreateTranslationJobOperationCompleted Is Nothing) Then
                Me.CreateTranslationJobOperationCompleted = AddressOf Me.OnCreateTranslationJobOperationCompleted
            End If
            Me.InvokeAsync("CreateTranslationJob", New Object() {psAuthContext, pasWriteAccess, pasReadAccess, psXMLMetaData, psXMLTranslationJobContainerList, psXMLTranslationJobWorkflowList, psOutTranslationJobId}, Me.CreateTranslationJobOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateTranslationJobOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateTranslationJobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateTranslationJobCompleted(Me, New CreateTranslationJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/UpdateTranslationJob3", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTranslationJob3(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal pasWriteAccess() As String, ByVal pasReadAccess() As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobContainerList As String, ByVal psXMLTranslationJobWorkflowList As String) As String
            Dim results() As Object = Me.Invoke("UpdateTranslationJob3", New Object() {psAuthContext, psTranslationJobId, pasWriteAccess, pasReadAccess, psXMLMetaData, psXMLRequiredCurrentMetaData, psXMLTranslationJobContainerList, psXMLTranslationJobWorkflowList})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTranslationJob3Async(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal pasWriteAccess() As String, ByVal pasReadAccess() As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobContainerList As String, ByVal psXMLTranslationJobWorkflowList As String)
            Me.UpdateTranslationJob3Async(psAuthContext, psTranslationJobId, pasWriteAccess, pasReadAccess, psXMLMetaData, psXMLRequiredCurrentMetaData, psXMLTranslationJobContainerList, psXMLTranslationJobWorkflowList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTranslationJob3Async(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal pasWriteAccess() As String, ByVal pasReadAccess() As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobContainerList As String, ByVal psXMLTranslationJobWorkflowList As String, ByVal userState As Object)
            If (Me.UpdateTranslationJob3OperationCompleted Is Nothing) Then
                Me.UpdateTranslationJob3OperationCompleted = AddressOf Me.OnUpdateTranslationJob3OperationCompleted
            End If
            Me.InvokeAsync("UpdateTranslationJob3", New Object() {psAuthContext, psTranslationJobId, pasWriteAccess, pasReadAccess, psXMLMetaData, psXMLRequiredCurrentMetaData, psXMLTranslationJobContainerList, psXMLTranslationJobWorkflowList}, Me.UpdateTranslationJob3OperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTranslationJob3OperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTranslationJob3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTranslationJob3Completed(Me, New UpdateTranslationJob3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/Delete", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Delete(ByRef psAuthContext As String, ByVal psTranslationJobId As String) As String
            Dim results() As Object = Me.Invoke("Delete", New Object() {psAuthContext, psTranslationJobId})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String)
            Me.DeleteAsync(psAuthContext, psTranslationJobId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal userState As Object)
            If (Me.DeleteOperationCompleted Is Nothing) Then
                Me.DeleteOperationCompleted = AddressOf Me.OnDeleteOperationCompleted
            End If
            Me.InvokeAsync("Delete", New Object() {psAuthContext, psTranslationJobId}, Me.DeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteCompleted(Me, New DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/SetMetaData3", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetMetaData3(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentMetaData As String) As String
            Dim results() As Object = Me.Invoke("SetMetaData3", New Object() {psAuthContext, psTranslationJobId, psXMLMetaData, psXMLRequiredCurrentMetaData})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetMetaData3Async(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentMetaData As String)
            Me.SetMetaData3Async(psAuthContext, psTranslationJobId, psXMLMetaData, psXMLRequiredCurrentMetaData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetMetaData3Async(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLMetaData As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal userState As Object)
            If (Me.SetMetaData3OperationCompleted Is Nothing) Then
                Me.SetMetaData3OperationCompleted = AddressOf Me.OnSetMetaData3OperationCompleted
            End If
            Me.InvokeAsync("SetMetaData3", New Object() {psAuthContext, psTranslationJobId, psXMLMetaData, psXMLRequiredCurrentMetaData}, Me.SetMetaData3OperationCompleted, userState)
        End Sub
        
        Private Sub OnSetMetaData3OperationCompleted(ByVal arg As Object)
            If (Not (Me.SetMetaData3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetMetaData3Completed(Me, New SetMetaData3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/CreateTranslationJobItems"& _ 
            "", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateTranslationJobItems(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobItemList As String) As String
            Dim results() As Object = Me.Invoke("CreateTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLTranslationJobItemList})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobItemList As String)
            Me.CreateTranslationJobItemsAsync(psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLTranslationJobItemList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobItemList As String, ByVal userState As Object)
            If (Me.CreateTranslationJobItemsOperationCompleted Is Nothing) Then
                Me.CreateTranslationJobItemsOperationCompleted = AddressOf Me.OnCreateTranslationJobItemsOperationCompleted
            End If
            Me.InvokeAsync("CreateTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLTranslationJobItemList}, Me.CreateTranslationJobItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateTranslationJobItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateTranslationJobItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateTranslationJobItemsCompleted(Me, New CreateTranslationJobItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/UpdateTranslationJobItems"& _ 
            "", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTranslationJobItems(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobItemList As String) As String
            Dim results() As Object = Me.Invoke("UpdateTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLTranslationJobItemList})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobItemList As String)
            Me.UpdateTranslationJobItemsAsync(psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLTranslationJobItemList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLTranslationJobItemList As String, ByVal userState As Object)
            If (Me.UpdateTranslationJobItemsOperationCompleted Is Nothing) Then
                Me.UpdateTranslationJobItemsOperationCompleted = AddressOf Me.OnUpdateTranslationJobItemsOperationCompleted
            End If
            Me.InvokeAsync("UpdateTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLTranslationJobItemList}, Me.UpdateTranslationJobItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTranslationJobItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTranslationJobItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTranslationJobItemsCompleted(Me, New UpdateTranslationJobItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/DeleteTranslationJobItems"& _ 
            "", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteTranslationJobItems(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String) As String
            Dim results() As Object = Me.Invoke("DeleteTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String)
            Me.DeleteTranslationJobItemsAsync(psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteTranslationJobItemsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal userState As Object)
            If (Me.DeleteTranslationJobItemsOperationCompleted Is Nothing) Then
                Me.DeleteTranslationJobItemsOperationCompleted = AddressOf Me.OnDeleteTranslationJobItemsOperationCompleted
            End If
            Me.InvokeAsync("DeleteTranslationJobItems", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData}, Me.DeleteTranslationJobItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteTranslationJobItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteTranslationJobItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteTranslationJobItemsCompleted(Me, New DeleteTranslationJobItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/CreateExternalTranslation"& _ 
            "Jobs", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateExternalTranslationJobs(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLExternalTranslationJobList As String) As String
            Dim results() As Object = Me.Invoke("CreateExternalTranslationJobs", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLExternalTranslationJobList})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateExternalTranslationJobsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLExternalTranslationJobList As String)
            Me.CreateExternalTranslationJobsAsync(psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLExternalTranslationJobList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateExternalTranslationJobsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal psXMLExternalTranslationJobList As String, ByVal userState As Object)
            If (Me.CreateExternalTranslationJobsOperationCompleted Is Nothing) Then
                Me.CreateExternalTranslationJobsOperationCompleted = AddressOf Me.OnCreateExternalTranslationJobsOperationCompleted
            End If
            Me.InvokeAsync("CreateExternalTranslationJobs", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, psXMLExternalTranslationJobList}, Me.CreateExternalTranslationJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateExternalTranslationJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateExternalTranslationJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateExternalTranslationJobsCompleted(Me, New CreateExternalTranslationJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5/DeleteExternalTranslation"& _ 
            "Jobs", RequestNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", ResponseNamespace:="urn:trisoft.be:WebServices:InfoShare:TranslationJob:2.5", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteExternalTranslationJobs(ByRef psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String) As String
            Dim results() As Object = Me.Invoke("DeleteExternalTranslationJobs", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData})
            psAuthContext = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteExternalTranslationJobsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String)
            Me.DeleteExternalTranslationJobsAsync(psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteExternalTranslationJobsAsync(ByVal psAuthContext As String, ByVal psTranslationJobId As String, ByVal psXMLRequiredCurrentMetaData As String, ByVal userState As Object)
            If (Me.DeleteExternalTranslationJobsOperationCompleted Is Nothing) Then
                Me.DeleteExternalTranslationJobsOperationCompleted = AddressOf Me.OnDeleteExternalTranslationJobsOperationCompleted
            End If
            Me.InvokeAsync("DeleteExternalTranslationJobs", New Object() {psAuthContext, psTranslationJobId, psXMLRequiredCurrentMetaData}, Me.DeleteExternalTranslationJobsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteExternalTranslationJobsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteExternalTranslationJobsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteExternalTranslationJobsCompleted(Me, New DeleteExternalTranslationJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetPossibleTargetStatusesCompletedEventHandler(ByVal sender As Object, ByVal e As GetPossibleTargetStatusesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPossibleTargetStatusesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLLovValueList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetTranslationJobCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranslationJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranslationJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLTranslationJobContainerList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLTranslationJobWorkflowList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveMetaDataCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveMetaDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveMetaDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub FindCompletedEventHandler(ByVal sender As Object, ByVal e As FindCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLObjList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveTranslationJobItemsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveTranslationJobItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveTranslationJobItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLTranslationJobItemList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub RetrieveExternalTranslationJobsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveExternalTranslationJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveExternalTranslationJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutXMLExternalTranslationJobList() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateTranslationJobCompletedEventHandler(ByVal sender As Object, ByVal e As CreateTranslationJobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateTranslationJobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psOutTranslationJobId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub UpdateTranslationJob3CompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTranslationJob3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTranslationJob3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SetMetaData3CompletedEventHandler(ByVal sender As Object, ByVal e As SetMetaData3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetMetaData3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateTranslationJobItemsCompletedEventHandler(ByVal sender As Object, ByVal e As CreateTranslationJobItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateTranslationJobItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub UpdateTranslationJobItemsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTranslationJobItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTranslationJobItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteTranslationJobItemsCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteTranslationJobItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteTranslationJobItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateExternalTranslationJobsCompletedEventHandler(ByVal sender As Object, ByVal e As CreateExternalTranslationJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateExternalTranslationJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteExternalTranslationJobsCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteExternalTranslationJobsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteExternalTranslationJobsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property psAuthContext() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
End Namespace
